module Prelude exposing (+, -, *, /, %, ~, ||, &&, cons, car, cdr, nil?, ref!, get!, set!, map!, eq)

import Internal exposing (...)


def +(a, b) = ~sum-bin-num(a, b)
def -(a, b) = ~sub-bin-num(a, b)
def *(a, b) = ~mul-bin-num(a, b)
def /(a, b) = ~div-bin-num(a, b)
def %(a, b) = ~mod-bin-num(a, b)
def ~(a) = ~neg-uni-num(a)

def ||(a, b) = ~or-bin-bool(a, b)
def &&(a, b) = ~and-bin-bool(a, b)

def cons(x, xs) = ~list-cons(x, xs)
def car(xs) = ~list-car(xs)
def cdr(xs) = ~list-cdr(xs)
def nil?(xs) = ~list-nil(xs)

def ref! = ~ref-cell-ref!
def get! = ~ref-cell-get!
def set! = ~ref-cell-set!
def map!(r, f) =
  get!(set!(r, f(get!(r))))

def eq(a, b) = ~eq-bin-ord(a, b)
